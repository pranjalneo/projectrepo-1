{"ast":null,"code":"/*!\r\n\r\n=========================================================\r\n* Now UI Dashboard React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\n// ##############################\n// // // Function that converts a hex color number to a RGB color number\n// #############################\n//import axios from 'axios';\nfunction hexToRGB(hex, alpha) {\n  var r = parseInt(hex.slice(1, 3), 16),\n      g = parseInt(hex.slice(3, 5), 16),\n      b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n  } else {\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n  }\n} // ##############################\n// // // general variables for charts\n// #############################\n\n\nconst chartColor = \"#FFFFFF\"; // General configuration for the charts with Line gradientStroke\n\nconst gradientChartOptionsConfiguration = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    bodySpacing: 4,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n    xPadding: 10,\n    yPadding: 10,\n    caretPadding: 10\n  },\n  responsive: 1,\n  scales: {\n    yAxes: [{\n      display: 0,\n      ticks: {\n        display: false,\n        maxTicksLimit: 7\n      },\n      gridLines: {\n        zeroLineColor: \"transparent\",\n        drawTicks: false,\n        display: false,\n        drawBorder: false\n      }\n    }],\n    xAxes: [{\n      display: 0,\n      ticks: {\n        display: false\n      },\n      gridLines: {\n        zeroLineColor: \"transparent\",\n        drawTicks: false,\n        display: false,\n        drawBorder: false\n      }\n    }]\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 15,\n      bottom: 15\n    }\n  }\n};\nvar gradientChartOptionsConfigurationWithNumbersAndGrid = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    bodySpacing: 4,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n    xPadding: 10,\n    yPadding: 10,\n    caretPadding: 10\n  },\n  responsive: 1,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        zeroLineColor: \"transparent\",\n        drawBorder: false\n      },\n      ticks: {\n        maxTicksLimit: 7\n      }\n    }],\n    xAxes: [{\n      display: 0,\n      ticks: {\n        display: false\n      },\n      gridLines: {\n        zeroLineColor: \"transparent\",\n        drawTicks: false,\n        display: false,\n        drawBorder: false\n      }\n    }]\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 15,\n      bottom: 15\n    }\n  }\n}; // ##############################\n// // // Dashboard view - Panel chart\n// #############################\n\nconst dashboardPanelChart = {\n  data: canvas => {\n    const ctx = canvas.getContext(\"2d\");\n    var chartColor = \"#FFFFFF\";\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, \"#80b6f4\");\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 200, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.14)\");\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"Data\",\n        borderColor: chartColor,\n        pointBorderColor: chartColor,\n        pointBackgroundColor: \"#2c2c2c\",\n        pointHoverBackgroundColor: \"#2c2c2c\",\n        pointHoverBorderColor: chartColor,\n        pointBorderWidth: 1,\n        pointHoverRadius: 7,\n        pointHoverBorderWidth: 2,\n        pointRadius: 5,\n        fill: true,\n        backgroundColor: gradientFill,\n        borderWidth: 2,\n        data: [50, 150, 100, 190, 130, 90, 150, 160, 120, 140, 190, 95]\n      }]\n    };\n  },\n  options: {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 0\n      }\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      backgroundColor: \"#fff\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    legend: {\n      position: \"bottom\",\n      fillStyle: \"#FFF\",\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontColor: \"rgba(255,255,255,0.4)\",\n          fontStyle: \"bold\",\n          beginAtZero: true,\n          maxTicksLimit: 5,\n          padding: 10\n        },\n        gridLines: {\n          drawTicks: true,\n          drawBorder: false,\n          display: true,\n          color: \"rgba(255,255,255,0.1)\",\n          zeroLineColor: \"transparent\"\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          display: false,\n          color: \"rgba(255,255,255,0.1)\"\n        },\n        ticks: {\n          padding: 10,\n          fontColor: \"rgba(255,255,255,0.4)\",\n          fontStyle: \"bold\"\n        }\n      }]\n    }\n  }\n}; // ##############################\n// // // Dashboard view - Shipped Products - Card\n// #############################\n\nfunction firethis() {\n  let sol = [];\n  fetch('http://localhost:4000/messages/getmessage').then(response => response.json()).then(result => {\n    const arr = result;\n\n    if (typeof arr != 'undefined') {\n      arr.forEach(i => {\n        console.log('here', i.intentconf);\n\n        if (typeof i.intentconf != 'undefined') {\n          sol.push(i.intentconf);\n        }\n      });\n    }\n  });\n  console.log(typeof sol);\n  console.log(sol);\n  return sol;\n}\n\nconst dashboardShippedProductsChart = {\n  data: canvas => {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, \"#80b6f4\");\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\n    return {\n      labels: [\"Intent 1\", \"Intent 2\", \"Intent 3\", \"Intent 4\", \"Intent 5\", \"Intent 6\", \"Intent 7\", \"Intent 8\", \"Intent 9\", \"Intent 10\"],\n      datasets: [{\n        label: \"Confidence Detection\",\n        borderColor: \"#f96332\",\n        pointBorderColor: \"#FFF\",\n        pointBackgroundColor: \"#f96332\",\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        backgroundColor: gradientFill,\n        borderWidth: 2,\n        data: firethis()\n      }]\n    };\n  },\n  options: gradientChartOptionsConfiguration\n}; // ##############################\n// // // Dashboard view - All Products - Card\n// #############################\n\nconst dashboardAllProductsChart = {\n  data: canvas => {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, \"#18ce0f\");\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, hexToRGB(\"#18ce0f\", 0.4));\n    return {\n      labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\n      datasets: [{\n        label: \"Email Stats\",\n        borderColor: \"#18ce0f\",\n        pointBorderColor: \"#FFF\",\n        pointBackgroundColor: \"#18ce0f\",\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        backgroundColor: gradientFill,\n        borderWidth: 2,\n        data: [40, 500, 650, 700, 1200, 1250, 1300, 1900]\n      }]\n    };\n  },\n  options: gradientChartOptionsConfigurationWithNumbersAndGrid\n}; // ##############################\n// // // Dashboard view - Bar Chart - Card\n// #############################\n\nconst dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, hexToRGB(\"#2CA8FF\", 0.6));\n    return {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      datasets: [{\n        label: \"Active Countries\",\n        backgroundColor: gradientFill,\n        borderColor: \"#2CA8FF\",\n        pointBorderColor: \"#FFF\",\n        pointBackgroundColor: \"#2CA8FF\",\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        borderWidth: 1,\n        data: [81, 99, 86, 96, 123, 85, 100, 75, 88, 90, 123, 155]\n      }]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      bodySpacing: 4,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n      xPadding: 10,\n      yPadding: 10,\n      caretPadding: 10\n    },\n    responsive: 1,\n    scales: {\n      yAxes: [{\n        ticks: {\n          maxTicksLimit: 7\n        },\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          drawBorder: false\n        }\n      }],\n      xAxes: [{\n        display: 0,\n        ticks: {\n          display: false\n        },\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          drawTicks: false,\n          display: false,\n          drawBorder: false\n        }\n      }]\n    },\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 15,\n        bottom: 15\n      }\n    }\n  }\n};\nmodule.exports = {\n  dashboardPanelChart,\n  // Chart for Dashboard view - Will be rendered in panel\n  dashboardShippedProductsChart,\n  // Chart for Dashboard view - Shipped Products Card\n  dashboardAllProductsChart,\n  // Chart for Dashboard view - All products Card\n  dashboard24HoursPerformanceChart // Chart for Dashboard view - 24 Hours Performance Card\n\n};","map":{"version":3,"sources":["D:/final year project repo/projectrepo/src/variables/charts.jsx"],"names":["hexToRGB","hex","alpha","r","parseInt","slice","g","b","chartColor","gradientChartOptionsConfiguration","maintainAspectRatio","legend","display","tooltips","bodySpacing","mode","intersect","position","xPadding","yPadding","caretPadding","responsive","scales","yAxes","ticks","maxTicksLimit","gridLines","zeroLineColor","drawTicks","drawBorder","xAxes","layout","padding","left","right","top","bottom","gradientChartOptionsConfigurationWithNumbersAndGrid","dashboardPanelChart","data","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","gradientFill","labels","datasets","label","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","backgroundColor","borderWidth","options","titleFontColor","bodyFontColor","fillStyle","fontColor","fontStyle","beginAtZero","color","firethis","sol","fetch","then","response","json","result","arr","forEach","i","console","log","intentconf","push","dashboardShippedProductsChart","dashboardAllProductsChart","dashboard24HoursPerformanceChart","module","exports"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Now UI Dashboard React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n// ##############################\r\n// // // Function that converts a hex color number to a RGB color number\r\n// #############################\r\n//import axios from 'axios';\r\n\r\nfunction hexToRGB(hex, alpha) {\r\n  var r = parseInt(hex.slice(1, 3), 16),\r\n    g = parseInt(hex.slice(3, 5), 16),\r\n    b = parseInt(hex.slice(5, 7), 16);\r\n\r\n  if (alpha) {\r\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n  } else {\r\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n  }\r\n}\r\n\r\n// ##############################\r\n// // // general variables for charts\r\n// #############################\r\n\r\nconst chartColor = \"#FFFFFF\";\r\n\r\n// General configuration for the charts with Line gradientStroke\r\nconst gradientChartOptionsConfiguration = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  tooltips: {\r\n    bodySpacing: 4,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n    xPadding: 10,\r\n    yPadding: 10,\r\n    caretPadding: 10\r\n  },\r\n  responsive: 1,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        display: 0,\r\n        ticks: {\r\n          display: false,\r\n          maxTicksLimit: 7\r\n        },\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawTicks: false,\r\n          display: false,\r\n          drawBorder: false\r\n        }\r\n      }\r\n    ],\r\n    xAxes: [\r\n      {\r\n        display: 0,\r\n        ticks: {\r\n          display: false\r\n        },\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawTicks: false,\r\n          display: false,\r\n          drawBorder: false\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  layout: {\r\n    padding: { left: 0, right: 0, top: 15, bottom: 15 }\r\n  }\r\n};\r\n\r\nvar gradientChartOptionsConfigurationWithNumbersAndGrid = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false\r\n  },\r\n  tooltips: {\r\n    bodySpacing: 4,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n    xPadding: 10,\r\n    yPadding: 10,\r\n    caretPadding: 10\r\n  },\r\n  responsive: 1,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawBorder: false\r\n        },\r\n        ticks: {\r\n          maxTicksLimit: 7\r\n        }\r\n      }\r\n    ],\r\n    xAxes: [\r\n      {\r\n        display: 0,\r\n        ticks: {\r\n          display: false\r\n        },\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawTicks: false,\r\n          display: false,\r\n          drawBorder: false\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  layout: {\r\n    padding: { left: 0, right: 0, top: 15, bottom: 15 }\r\n  }\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Panel chart\r\n// #############################\r\n\r\nconst dashboardPanelChart = {\r\n  data: canvas => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    var chartColor = \"#FFFFFF\";\r\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n    gradientStroke.addColorStop(0, \"#80b6f4\");\r\n    gradientStroke.addColorStop(1, chartColor);\r\n    var gradientFill = ctx.createLinearGradient(0, 200, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.14)\");\r\n\r\n    return {\r\n      labels: [\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\"\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Data\",\r\n          borderColor: chartColor,\r\n          pointBorderColor: chartColor,\r\n          pointBackgroundColor: \"#2c2c2c\",\r\n          pointHoverBackgroundColor: \"#2c2c2c\",\r\n          pointHoverBorderColor: chartColor,\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 7,\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 5,\r\n          fill: true,\r\n          backgroundColor: gradientFill,\r\n          borderWidth: 2,\r\n          data: [50, 150, 100, 190, 130, 90, 150, 160, 120, 140, 190, 95]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  options: {\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 0,\r\n        bottom: 0\r\n      }\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      backgroundColor: \"#fff\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\"\r\n    },\r\n    legend: {\r\n      position: \"bottom\",\r\n      fillStyle: \"#FFF\",\r\n      display: false\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: \"rgba(255,255,255,0.4)\",\r\n            fontStyle: \"bold\",\r\n            beginAtZero: true,\r\n            maxTicksLimit: 5,\r\n            padding: 10\r\n          },\r\n          gridLines: {\r\n            drawTicks: true,\r\n            drawBorder: false,\r\n            display: true,\r\n            color: \"rgba(255,255,255,0.1)\",\r\n            zeroLineColor: \"transparent\"\r\n          }\r\n        }\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n            color: \"rgba(255,255,255,0.1)\"\r\n          },\r\n          ticks: {\r\n            padding: 10,\r\n            fontColor: \"rgba(255,255,255,0.4)\",\r\n            fontStyle: \"bold\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Shipped Products - Card\r\n// #############################\r\n\r\nfunction firethis(){\r\n\r\n  let sol = [];\r\n    fetch('http://localhost:4000/messages/getmessage')\r\n    .then(response=>response.json())\r\n    .then(result =>{\r\n      const arr = result;\r\n      if(typeof arr != 'undefined'){\r\n\r\n        arr.forEach((i) => {\r\n          console.log('here',i.intentconf);\r\n          if(typeof i.intentconf != 'undefined' ){\r\n\r\n            sol.push((i.intentconf));\r\n          }\r\n\r\n        });\r\n      }\r\n\r\n\r\n    });\r\n    console.log(typeof sol)\r\n    console.log(sol);\r\n    return sol;\r\n}\r\n\r\nconst dashboardShippedProductsChart = {\r\n  data: canvas => {\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n    gradientStroke.addColorStop(0, \"#80b6f4\");\r\n    gradientStroke.addColorStop(1, chartColor);\r\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\r\n    return {\r\n      labels: [\r\n        \"Intent 1\",\r\n        \"Intent 2\",\r\n        \"Intent 3\",\r\n        \"Intent 4\",\r\n        \"Intent 5\",\r\n        \"Intent 6\",\r\n        \"Intent 7\",\r\n        \"Intent 8\",\r\n        \"Intent 9\",\r\n        \"Intent 10\"\r\n\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Confidence Detection\",\r\n          borderColor: \"#f96332\",\r\n          pointBorderColor: \"#FFF\",\r\n          pointBackgroundColor: \"#f96332\",\r\n          pointBorderWidth: 2,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 4,\r\n          fill: true,\r\n          backgroundColor: gradientFill,\r\n          borderWidth: 2,\r\n          data: firethis()\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  options: gradientChartOptionsConfiguration\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart = {\r\n  data: canvas => {\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n    gradientStroke.addColorStop(0, \"#18ce0f\");\r\n    gradientStroke.addColorStop(1, chartColor);\r\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, hexToRGB(\"#18ce0f\", 0.4));\r\n    return {\r\n      labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\r\n      datasets: [\r\n        {\r\n          label: \"Email Stats\",\r\n          borderColor: \"#18ce0f\",\r\n          pointBorderColor: \"#FFF\",\r\n          pointBackgroundColor: \"#18ce0f\",\r\n          pointBorderWidth: 2,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 4,\r\n          fill: true,\r\n          backgroundColor: gradientFill,\r\n          borderWidth: 2,\r\n          data: [40, 500, 650, 700, 1200, 1250, 1300, 1900]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  options: gradientChartOptionsConfigurationWithNumbersAndGrid\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Bar Chart - Card\r\n// #############################\r\n\r\nconst dashboard24HoursPerformanceChart = {\r\n  data: canvas => {\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, hexToRGB(\"#2CA8FF\", 0.6));\r\n    return {\r\n      labels: [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Active Countries\",\r\n          backgroundColor: gradientFill,\r\n          borderColor: \"#2CA8FF\",\r\n          pointBorderColor: \"#FFF\",\r\n          pointBackgroundColor: \"#2CA8FF\",\r\n          pointBorderWidth: 2,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 4,\r\n          fill: true,\r\n          borderWidth: 1,\r\n          data: [81, 99, 86, 96, 123, 85, 100, 75, 88, 90, 123, 155]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false\r\n    },\r\n    tooltips: {\r\n      bodySpacing: 4,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n      xPadding: 10,\r\n      yPadding: 10,\r\n      caretPadding: 10\r\n    },\r\n    responsive: 1,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            maxTicksLimit: 7\r\n          },\r\n          gridLines: {\r\n            zeroLineColor: \"transparent\",\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      xAxes: [\r\n        {\r\n          display: 0,\r\n          ticks: {\r\n            display: false\r\n          },\r\n          gridLines: {\r\n            zeroLineColor: \"transparent\",\r\n            drawTicks: false,\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    layout: {\r\n      padding: { left: 0, right: 0, top: 15, bottom: 15 }\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n\r\n  dashboardPanelChart, // Chart for Dashboard view - Will be rendered in panel\r\n  dashboardShippedProductsChart, // Chart for Dashboard view - Shipped Products Card\r\n  dashboardAllProductsChart, // Chart for Dashboard view - All products Card\r\n  dashboard24HoursPerformanceChart // Chart for Dashboard view - 24 Hours Performance Card\r\n};\r\n"]},"metadata":{},"sourceType":"module"}