{"ast":null,"code":"var _jsxFileName = \"D:\\\\t2s work\\\\t2s-intern-training-web\\\\uiintegration\\\\src\\\\components\\\\Navbars\\\\DemoNavbar.jsx\";\n\n/*!\r\n\r\n=========================================================\r\n* Now UI Dashboard React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, InputGroup, InputGroupText, InputGroupAddon, Input } from \"reactstrap\";\nimport routes from \"routes.js\";\n\nclass Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.sidebarToggle = React.createRef();\n\n    this.toggle = () => {\n      if (this.state.isOpen) {\n        this.setState({\n          color: \"transparent\"\n        });\n      } else {\n        this.setState({\n          color: \"white\"\n        });\n      }\n\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.dropdownToggle = e => {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    };\n\n    this.getBrand = () => {\n      var name;\n      routes.map((prop, key) => {\n        if (prop.collapse) {\n          prop.views.map((prop, key) => {\n            if (prop.path === this.props.location.pathname) {\n              name = prop.name;\n            }\n\n            return null;\n          });\n        } else {\n          if (prop.redirect) {\n            if (prop.path === this.props.location.pathname) {\n              name = prop.name;\n            }\n          } else {\n            if (prop.path === this.props.location.pathname) {\n              name = prop.name;\n            }\n          }\n        }\n\n        return null;\n      });\n      return name;\n    };\n\n    this.openSidebar = () => {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    };\n\n    this.updateColor = () => {\n      if (window.innerWidth < 993 && this.state.isOpen) {\n        this.setState({\n          color: \"white\"\n        });\n      } else {\n        this.setState({\n          color: \"transparent\"\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n\n  componentDidUpdate(e) {\n    if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n\n  render() {\n    return (// add or remove classes depending if we are on full-screen-maps page or not\n      React.createElement(Navbar, {\n        color: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"white\" : this.state.color,\n        expand: \"lg\",\n        className: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        ref: this.sidebarToggle,\n        className: \"navbar-toggler\",\n        onClick: () => this.openSidebar(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))), React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.getBrand())), React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        className: \"justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Search...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"now-ui-icons ui-1_zoom-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }))))), React.createElement(Nav, {\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"#pablo\",\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"now-ui-icons media-2_sound-wave\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-lg-none d-md-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Stats\")))), React.createElement(Dropdown, {\n        nav: true,\n        isOpen: this.state.dropdownOpen,\n        toggle: e => this.dropdownToggle(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        nav: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"now-ui-icons location_world\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-lg-none d-md-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Some Actions\"))), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        tag: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Action\"), React.createElement(DropdownItem, {\n        tag: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Another Action\"), React.createElement(DropdownItem, {\n        tag: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Something else here\"))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"#pablo\",\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"now-ui-icons users_single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-lg-none d-md-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Account\"))))))))\n    );\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["D:/t2s work/t2s-intern-training-web/uiintegration/src/components/Navbars/DemoNavbar.jsx"],"names":["React","Link","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Container","InputGroup","InputGroupText","InputGroupAddon","Input","routes","Header","Component","state","isOpen","dropdownOpen","color","sidebarToggle","createRef","toggle","setState","dropdownToggle","e","getBrand","name","map","prop","key","collapse","views","path","props","location","pathname","redirect","openSidebar","document","documentElement","classList","current","updateColor","window","innerWidth","componentDidMount","addEventListener","bind","componentDidUpdate","history","className","indexOf","render"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,QADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,GALF,EAMEC,OANF,EAOEC,QAPF,EAQEC,cARF,EASEC,YATF,EAUEC,YAVF,EAWEC,SAXF,EAYEC,UAZF,EAaEC,cAbF,EAcEC,eAdF,EAeEC,KAfF,QAgBO,YAhBP;AAkBA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,MAAN,SAAqBlB,KAAK,CAACmB,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACNC,MAAAA,MAAM,EAAE,KADF;AAENC,MAAAA,YAAY,EAAE,KAFR;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAD2B;AAAA,SAMnCC,aANmC,GAMnBxB,KAAK,CAACyB,SAAN,EANmB;;AAAA,SAOnCC,MAPmC,GAO1B,MAAM;AACb,UAAI,KAAKN,KAAL,CAAWC,MAAf,EAAuB;AACrB,aAAKM,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAJD,MAIO;AACL,aAAKI,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;;AACD,WAAKI,QAAL,CAAc;AACZN,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADR,OAAd;AAGD,KApBkC;;AAAA,SAqBnCO,cArBmC,GAqBlBC,CAAC,IAAI;AACpB,WAAKF,QAAL,CAAc;AACZL,QAAAA,YAAY,EAAE,CAAC,KAAKF,KAAL,CAAWE;AADd,OAAd;AAGD,KAzBkC;;AAAA,SA0BnCQ,QA1BmC,GA0BxB,MAAM;AACf,UAAIC,IAAJ;AACAd,MAAAA,MAAM,CAACe,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxB,YAAID,IAAI,CAACE,QAAT,EAAmB;AACjBF,UAAAA,IAAI,CAACG,KAAL,CAAWJ,GAAX,CAAe,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5B,gBAAID,IAAI,CAACI,IAAL,KAAc,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAAtC,EAAgD;AAC9CT,cAAAA,IAAI,GAAGE,IAAI,CAACF,IAAZ;AACD;;AACD,mBAAO,IAAP;AACD,WALD;AAMD,SAPD,MAOO;AACL,cAAIE,IAAI,CAACQ,QAAT,EAAmB;AACjB,gBAAIR,IAAI,CAACI,IAAL,KAAc,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAAtC,EAAgD;AAC9CT,cAAAA,IAAI,GAAGE,IAAI,CAACF,IAAZ;AACD;AACF,WAJD,MAIO;AACL,gBAAIE,IAAI,CAACI,IAAL,KAAc,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAAtC,EAAgD;AAC9CT,cAAAA,IAAI,GAAGE,IAAI,CAACF,IAAZ;AACD;AACF;AACF;;AACD,eAAO,IAAP;AACD,OApBD;AAqBA,aAAOA,IAAP;AACD,KAlDkC;;AAAA,SAmDnCW,WAnDmC,GAmDrB,MAAM;AAClBC,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCnB,MAAnC,CAA0C,UAA1C;AACA,WAAKF,aAAL,CAAmBsB,OAAnB,CAA2BD,SAA3B,CAAqCnB,MAArC,CAA4C,SAA5C;AACD,KAtDkC;;AAAA,SAwDnCqB,WAxDmC,GAwDrB,MAAM;AAClB,UAAIC,MAAM,CAACC,UAAP,GAAoB,GAApB,IAA2B,KAAK7B,KAAL,CAAWC,MAA1C,EAAkD;AAChD,aAAKM,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAJD,MAIO;AACL,aAAKI,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;AACF,KAlEkC;AAAA;;AAmEnC2B,EAAAA,iBAAiB,GAAG;AAClBF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,WAAL,CAAiBK,IAAjB,CAAsB,IAAtB,CAAlC;AACD;;AACDC,EAAAA,kBAAkB,CAACxB,CAAD,EAAI;AACpB,QACEmB,MAAM,CAACC,UAAP,GAAoB,GAApB,IACApB,CAAC,CAACyB,OAAF,CAAUf,QAAV,CAAmBC,QAAnB,KAAgCX,CAAC,CAACU,QAAF,CAAWC,QAD3C,IAEAG,QAAQ,CAACC,eAAT,CAAyBW,SAAzB,CAAmCC,OAAnC,CAA2C,UAA3C,MAA2D,CAAC,CAH9D,EAIE;AACAb,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCnB,MAAnC,CAA0C,UAA1C;AACA,WAAKF,aAAL,CAAmBsB,OAAnB,CAA2BD,SAA3B,CAAqCnB,MAArC,CAA4C,SAA5C;AACD;AACF;;AACD+B,EAAAA,MAAM,GAAG;AACP,WACE;AACA,0BAAC,MAAD;AACE,QAAA,KAAK,EACH,KAAKnB,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BgB,OAA7B,CAAqC,kBAArC,MAA6D,CAAC,CAA9D,GACI,OADJ,GAEI,KAAKpC,KAAL,CAAWG,KAJnB;AAME,QAAA,MAAM,EAAC,IANT;AAOE,QAAA,SAAS,EACP,KAAKe,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BgB,OAA7B,CAAqC,kBAArC,MAA6D,CAAC,CAA9D,GACI,2BADJ,GAEI,gCACC,KAAKpC,KAAL,CAAWG,KAAX,KAAqB,aAArB,GAAqC,qBAArC,GAA6D,EAD9D,CAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,GAAG,EAAE,KAAKC,aAFZ;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAIE,QAAA,OAAO,EAAE,MAAM,KAAKkB,WAAL,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CADF,EAaE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuB,KAAKZ,QAAL,EAAvB,CAbF,CADF,EAgBE,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAE,KAAKJ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,iCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,SAAS,EAAC,iCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAM,QAAA,SAAS,EAAC,iCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAhBF,EAqBE,oBAAC,QAAD;AACE,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWC,MADrB;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,SAAS,EAAC,qBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFF,CADF,CALF,EAeE,oBAAC,GAAD;AAAK,QAAA,MAAM,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,SAAS,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAFF,CADF,CADF,EASE,oBAAC,QAAD;AACE,QAAA,GAAG,MADL;AAEE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,YAFrB;AAGE,QAAA,MAAM,EAAEO,CAAC,IAAI,KAAKD,cAAL,CAAoBC,CAApB,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,GAAG,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAFF,CALF,EAWE,oBAAC,YAAD;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGE,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,CAXF,CATF,EA0BE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,SAAS,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAFF,CADF,CA1BF,CAfF,CArBF,CAdF;AAFF;AA2FD;;AA5KkC;;AA+KrC,eAAeX,MAAf","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Now UI Dashboard React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Container,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    dropdownOpen: false,\r\n    color: \"transparent\"\r\n  };\r\n  sidebarToggle = React.createRef();\r\n  toggle = () => {\r\n    if (this.state.isOpen) {\r\n      this.setState({\r\n        color: \"transparent\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"white\"\r\n      });\r\n    }\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n  dropdownToggle = e => {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  };\r\n  getBrand = () => {\r\n    var name;\r\n    routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        prop.views.map((prop, key) => {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n          return null;\r\n        });\r\n      } else {\r\n        if (prop.redirect) {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        } else {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  };\r\n  openSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\r\n  };\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  updateColor = () => {\r\n    if (window.innerWidth < 993 && this.state.isOpen) {\r\n      this.setState({\r\n        color: \"white\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"transparent\"\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      // add or remove classes depending if we are on full-screen-maps page or not\r\n      <Navbar\r\n        color={\r\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n            ? \"white\"\r\n            : this.state.color\r\n        }\r\n        expand=\"lg\"\r\n        className={\r\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n            ? \"navbar-absolute fixed-top\"\r\n            : \"navbar-absolute fixed-top \" +\r\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\r\n        }\r\n      >\r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-toggle\">\r\n              <button\r\n                type=\"button\"\r\n                ref={this.sidebarToggle}\r\n                className=\"navbar-toggler\"\r\n                onClick={() => this.openSidebar()}\r\n              >\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </button>\r\n            </div>\r\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\r\n          </div>\r\n          <NavbarToggler onClick={this.toggle}>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n          </NavbarToggler>\r\n          <Collapse\r\n            isOpen={this.state.isOpen}\r\n            navbar\r\n            className=\"justify-content-end\"\r\n          >\r\n            <form>\r\n              <InputGroup className=\"no-border\">\r\n                <Input placeholder=\"Search...\" />\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <InputGroupText>\r\n                    <i className=\"now-ui-icons ui-1_zoom-bold\" />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </form>\r\n            <Nav navbar>\r\n              <NavItem>\r\n                <Link to=\"#pablo\" className=\"nav-link\">\r\n                  <i className=\"now-ui-icons media-2_sound-wave\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                  </p>\r\n                </Link>\r\n              </NavItem>\r\n              <Dropdown\r\n                nav\r\n                isOpen={this.state.dropdownOpen}\r\n                toggle={e => this.dropdownToggle(e)}\r\n              >\r\n                <DropdownToggle caret nav>\r\n                  <i className=\"now-ui-icons location_world\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\r\n                  </p>\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem tag=\"a\">Action</DropdownItem>\r\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem>\r\n                  <DropdownItem tag=\"a\">Something else here</DropdownItem>\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n              <NavItem>\r\n                <Link to=\"#pablo\" className=\"nav-link\">\r\n                  <i className=\"now-ui-icons users_single-02\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Account</span>\r\n                  </p>\r\n                </Link>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}